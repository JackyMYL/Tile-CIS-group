#!/usr/bin/env python
# Author: Cora Fischer
#
# for each run, plot PMT current ratio of A13/D5 distribution, fit with gaussian, plot as function of time
#

import os

os.chdir(os.getenv('TUCS','.'))

exec(open('src/mbias/getDatesForCool.py').read(), globals())
#exec(open('src/laser/laserGetOpt.py').read(), globals())
exec(open('src/load.py').read(), globals()) # don't remove this!

#print region

runs =[]
 	
#runs.append(208485)
#runs.append(206955)
#runs.append(215456)
#runs.append(213796)

#runs.append(200863)
#runs.append(202668)
#runs.append(202712)
#runs.append(203027)
#runs.append(204071)
#runs.append(204265)
#runs.append(207582)
#runs.append(208982)
#runs.append(209787)
#runs.append(210308)
#runs.append(213250)
#runs.append(213951)
#runs.append(214176)
#runs.append(214721)
#runs.append(214758)

#62 out of 64 modules have good entries EBA
#runs.append(213796)
#runs.append(203779)
#runs.append(202798)
#runs.append(206971)
#runs.append(203353)
#runs.append(202660)
#runs.append(207982)
#runs.append(206962)
#runs.append(200863)#c
#61 out of 64 modules have good entries EBA (ch 16 for D5)
#runs.append(200863)
#runs.append(201257)
#runs.append(202660)
#runs.append(202668)
#runs.append(202798)
#runs.append(203353)
#runs.append(203779)
#runs.append(204026)
#runs.append(206253)
#runs.append(206564)
#runs.append(206962)
#runs.append(206971)
#runs.append(207221)
#runs.append(207304)
#runs.append(207809)
#runs.append(207982)
#runs.append(208811)
#runs.append(209109)
#runs.append(209899)
#runs.append(212858)
#runs.append(213796)
#runs.append(214680)


#63 out of 64 modules have good entries EBC
#runs.append(207490)
#runs.append(209899)
#runs.append(203027)#c
#runs.append(210302)
#runs.append(209787)#c
#runs.append(212172)
#runs.append(202668)#c
#runs.append(204955)
#runs.append(203277)
#runs.append(209995)
#runs.append(214777)
#runs.append(207306)
#runs.append(206248)
#runs.append(203636)
#runs.append(212144)
#runs.append(209183)
#runs.append(202798)#b
#runs.append(214390)
#runs.append(212967)
#runs.append(215473)
#runs.append(200863)#c#b
#runs.append(202660)#b
#runs.append(213900)
#runs.append(203258)
#runs.append(207696)
#runs.append(206253)

#runs.append(215473)
##runs.append(206848)# no events??
#runs.append(204265)
#doSingleRun = False
#if len(runs) == 1: doSingleRun =True
#runs = '2012-04-01' 

#runs.append(266904)
#runs.append(266919)
##runs.append(267073)
##runs.append(267148)
#runs.append(267152)
##runs.append(267162)
#runs.append(267167)
#runs.append(267359)
#runs.append(267358)

##runs.append(267360)
##runs.append(267367)
##runs.append(267385)
##runs.append(267599) 

#runs.append(267638)
#runs.append(267639)

#runs.append(270448)

"""

#not in new grl
runs.append(270588)
runs.append(270953)
runs.append(271048)
runs.append(271298)

##runs.append(271421)
runs.append(271516)
runs.append(271595)
runs.append(271744)
runs.append(272531)

runs.append(276336)
runs.append(276330)
runs.append(276329)

runs.append(276262)
runs.append(276245)
##runs.append(276212)
runs.append(276189)
runs.append(276181)
#runs.append(276161)
#runs.append(276147)
runs.append(276073)
runs.append(276416) 
runs.append(276511) 
runs.append(276689)
runs.append(276731) 
runs.append(276778)
runs.append(276790)
#new
runs.append(276952)
runs.append(276954)
#runs.append(278880)
runs.append(278912)
runs.append(279169)
runs.append(279279)
runs.append(279284)
runs.append(279345)
runs.append(279515)
#runs.append(279598)
runs.append(279813)
runs.append(279867)
runs.append(280231)
runs.append(280319)
runs.append(280423)
runs.append(280464)
runs.append(280500)
runs.append(280520)
runs.append(280614)
runs.append(280673)
runs.append(280753)
runs.append(280853)
runs.append(280862)
runs.append(280977)
runs.append(281070)
runs.append(281075)

runs.append(281317)
runs.append(281385)
#runs.append(281411)
#runs.append(282625)
runs.append(282631)
runs.append(282712)
runs.append(282784)
#runs.append(282992)
runs.append(283074)
runs.append(283155)
runs.append(283270)
runs.append(283429)
runs.append(283608)
runs.append(283780)
runs.append(284006)
runs.append(284154)
#runs.append(284213)

"""

# runs.append(284285)
# runs.append(284420)
# runs.append(284427)
# runs.append(284484)

# runs.append(298633)
# runs.append(302872)
# runs.append(303846)

# runs.append(296939)






"""
runs.append(314170)
runs.append(314157)
runs.append(314112)
runs.append(314105)
runs.append(314077)
runs.append(314014)
runs.append(313984)
runs.append(313935)
runs.append(313929)
runs.append(313878)
runs.append(313833)
runs.append(313695)
runs.append(313688)
runs.append(313629)
runs.append(313603)
runs.append(313574)
runs.append(313333)
runs.append(313295)
runs.append(313285)
runs.append(313259)
runs.append(313187)
runs.append(313136)
runs.append(313107)
runs.append(313100)
runs.append(313067)
runs.append(311481)
runs.append(311473)
runs.append(311402)
runs.append(311365)
runs.append(311321)
runs.append(311287)
runs.append(311244)
runs.append(311170)
runs.append(311071)
runs.append(310969)
runs.append(310872)
runs.append(310871)
runs.append(310863)
runs.append(310809)
runs.append(310738)
runs.append(310634)
runs.append(310574)
runs.append(310473)
runs.append(310468)
runs.append(310405)
runs.append(310370)
runs.append(310341)
runs.append(310249)
runs.append(310247)
runs.append(310216)
runs.append(310210)
runs.append(310181)
runs.append(310015)
runs.append(309759)
runs.append(309674)
runs.append(309640)
runs.append(309516)
runs.append(309390)
runs.append(309375)
runs.append(309346)
runs.append(309314)
runs.append(308084)
runs.append(308047)
runs.append(307988)
runs.append(307935)
runs.append(307912)
runs.append(307861)
runs.append(307732)
runs.append(307716)
runs.append(307710)
runs.append(307656)
runs.append(307619)
runs.append(307601)
runs.append(307569)
runs.append(307539)
runs.append(307514)
runs.append(307454)
runs.append(307358)
runs.append(307354)
runs.append(307306)
runs.append(307259)
runs.append(307195)
runs.append(307157)
runs.append(307126)
runs.append(306714)
runs.append(306657)
runs.append(306655)
runs.append(306499)
runs.append(306451)
runs.append(306448)
runs.append(306442)
runs.append(306384)
runs.append(306278)
runs.append(306269)
runs.append(306252)
runs.append(305920)
runs.append(305811)
runs.append(305727)
runs.append(305723)
runs.append(305674)
runs.append(305671)
runs.append(305618)
runs.append(305571)
runs.append(305543)
runs.append(305380)
runs.append(305359)
runs.append(305158)
runs.append(304494)
runs.append(304431)
runs.append(304409)
runs.append(304337)
runs.append(304308)
runs.append(304243)
runs.append(304211)
runs.append(304198)
runs.append(304178)
runs.append(304008)
runs.append(304006)
runs.append(303943)
runs.append(303892)
runs.append(303846)
runs.append(303832)
runs.append(303811)
runs.append(303726)
runs.append(303638)
runs.append(303560)
runs.append(303499)
runs.append(303338)
runs.append(303304)
runs.append(303291)
runs.append(303266)
runs.append(303264)
runs.append(303208)
runs.append(303079)
runs.append(303059)
runs.append(303007)
runs.append(302956)
runs.append(302925)
runs.append(302919)
runs.append(302872)
runs.append(302831)
runs.append(302829)
runs.append(302737)
runs.append(302393)
runs.append(302391)
runs.append(302380)
runs.append(302347)
runs.append(302300)
runs.append(302269)
runs.append(302265)
runs.append(302137)
runs.append(302053)
runs.append(301973)
runs.append(301932)
runs.append(300908)
runs.append(300863)
runs.append(300800)
runs.append(300784)
runs.append(300687)
runs.append(300600)
runs.append(300571)
runs.append(300540)
runs.append(300487)
runs.append(300418)
runs.append(300415)
runs.append(300345)
runs.append(300287)
runs.append(300279)
runs.append(299584)
runs.append(299390)
runs.append(299343)
runs.append(299340)
runs.append(299315)
runs.append(299288)
runs.append(299278)
runs.append(299243)
runs.append(299241)
runs.append(299184)
runs.append(299147)
runs.append(299144)
runs.append(299055)
runs.append(298967)
runs.append(298862)
runs.append(298773)
runs.append(298771)
runs.append(298690)
runs.append(298687)
runs.append(298633)
runs.append(298609)
runs.append(298595)
runs.append(297447)
runs.append(297170)
runs.append(297096)
runs.append(297083)
runs.append(297041)
runs.append(296878)
runs.append(296875)
runs.append(296848)
runs.append(296421)
runs.append(296396)
runs.append(295213)
runs.append(295147)
"""


# runs.append(296396)
# runs.append(296421)
# runs.append(296594)
# runs.append(296848)
# runs.append(296875)
# runs.append(296878)
# runs.append(297041)
# runs.append(297083)
# runs.append(297096)
# runs.append(297170)
# runs.append(297447)
# runs.append(297931)
# runs.append(298595)
# runs.append(298609)
# runs.append(298633)
# runs.append(298687)
# runs.append(298690)
# runs.append(298771)
# runs.append(298773)
# runs.append(298862)
# runs.append(298967)
# runs.append(299055)
# runs.append(299144)
# runs.append(299147)
# runs.append(299184)
# runs.append(299241)
# runs.append(299243)
# runs.append(299278)
# runs.append(299288)
# runs.append(299315)
# runs.append(299340)
# runs.append(299343)
# runs.append(299390)
# runs.append(299584)
# runs.append(300279)
# runs.append(300287)
# runs.append(300345)
# runs.append(300415)
# runs.append(300418)
# runs.append(300487)
# runs.append(300540)
# runs.append(300571)
# runs.append(300600)
# runs.append(300687)
# runs.append(300784)
# runs.append(300800)
# runs.append(300863)
# runs.append(300908)
# runs.append(301932)
# runs.append(301973)
# runs.append(302053)
# runs.append(302137)
# runs.append(302265)
# runs.append(302269)
# runs.append(302300)
# runs.append(302347)
# runs.append(302380)
# runs.append(302391)
# runs.append(302393)
# runs.append(302737)
# runs.append(302829)
# runs.append(302831)
# runs.append(302872)
# runs.append(302919)
# runs.append(302925)
# runs.append(302956)
# runs.append(303007)
# runs.append(303059)



"""
runs.append(303079)
runs.append(303201)
runs.append(303208)
runs.append(303264)
runs.append(303266)
runs.append(303291)
runs.append(303304)
runs.append(303338)
runs.append(303499)
runs.append(303560)
runs.append(303638)
runs.append(303726)
runs.append(303811)
runs.append(303832)
runs.append(303846)
runs.append(303892)
runs.append(303943)
runs.append(304006)
runs.append(304008)
runs.append(304178)
runs.append(304198)
runs.append(304211)
runs.append(304243)
runs.append(304308)
runs.append(304337)
runs.append(304409)
runs.append(304431)
runs.append(304494)
runs.append(305158)
runs.append(305258)
runs.append(305359)
runs.append(305380)
runs.append(305543)
runs.append(305571)
runs.append(305618)
runs.append(305671)
runs.append(305674)
runs.append(305723)
runs.append(305727)
runs.append(305735)
runs.append(305777)
runs.append(305811)
runs.append(305920)
runs.append(306252)
runs.append(306269)
runs.append(306278)
runs.append(306384)
runs.append(306442)
runs.append(306448)
runs.append(306451)
runs.append(306499)
runs.append(306655)
runs.append(306657)
runs.append(306714)
runs.append(307124)
runs.append(307126)
runs.append(307157)
runs.append(307195)
runs.append(307259)
runs.append(307306)
runs.append(307354)
runs.append(307358)
runs.append(307454)
runs.append(307514)
runs.append(307569)
runs.append(307601)
runs.append(307619)
runs.append(307656)
runs.append(307710)
runs.append(307716)
runs.append(307732)
runs.append(307861)
runs.append(307912)
runs.append(307935)
runs.append(307988)
runs.append(308047)
runs.append(308084)
runs.append(309314)
runs.append(309346)
runs.append(309375)
runs.append(309390)
runs.append(309516)
runs.append(309640)
runs.append(309674)
runs.append(309759)
runs.append(310015)
runs.append(310181)
runs.append(310210)
runs.append(310216)
runs.append(310247)
runs.append(310249)
runs.append(310341)
runs.append(310370)
runs.append(310405)
runs.append(310468)
runs.append(310473)
runs.append(310574)
runs.append(310634)
runs.append(310691)
runs.append(310738)
runs.append(310809)
runs.append(310863)
runs.append(310871)
runs.append(310872)
runs.append(310969)
runs.append(311071)
runs.append(311170)
runs.append(311244)
runs.append(311287)
runs.append(311321)
runs.append(311365)
runs.append(311402)
runs.append(311473)
runs.append(311481)
runs.append(311592)
runs.append(311747)
runs.append(312121)
runs.append(312368)
runs.append(313067)
runs.append(313100)
runs.append(313107)
runs.append(313136)
runs.append(313187)
runs.append(313259)
runs.append(313285)
runs.append(313294)
runs.append(313295)
runs.append(313333)
runs.append(313435)
runs.append(313574)
runs.append(313575)
runs.append(313603)
runs.append(313629)
runs.append(313688)
runs.append(313695)
runs.append(313833)
runs.append(313878)
runs.append(313929)
runs.append(313935)
runs.append(313984)
runs.append(314014)
runs.append(314077)
runs.append(314105)
runs.append(314112)
runs.append(314157)
runs.append(314170)
"""

# runs.append(322905)
# runs.append(323062)
# runs.append(323150)
# runs.append(323153)
# runs.append(323282)
# runs.append(323637)
# runs.append(324034)
# runs.append(324047)
# runs.append(324189)
# runs.append(324192)
# runs.append(324195)

runs.append(298633)
runs.append(302872)

#runs = '2015-07-01'
run_type = "MBias" 
#selected_region = "EBC_m22_c16_highgain" #
selected_region = "A13"#EBC_m01_c11_highgain" #here, if doRatio: only partition and channel important
singleChannel = False # if this is true and detector region is given: average over modules for given channel above, modnum=64
detectorRegion = 'A13'#region #"A13" # if you want to use the same as selected_region, leave this variable to None, but better use this option, otherwise it only takes one PMT channel
side = None #you can also specify if you want only A or C-side analysed, if you leave it empty, it will average over both sides
referenceCell = "D6"
processors = []

#for i in range(9,65):
    #if i<10:
        #selected_region="EBA_m0"+str(i)+"_c02_highgain"
    #else:
        #selected_region="EBA_m"+str(i)+"_c02_highgain"
                       
    #processors.append(Use(run=runs, region=selected_region, runType=run_type))
    #processors.append(ReadMBias(processingDir="/afs/cern.ch/user/t/tilecali/w0/ntuples/mbias/2015/first_data/",doSingleRun=False, doRatio = True, modnum=1, detector_region=detectorRegion, detector_side=side))
    #processors.append(PlotRatioPMTsVsTime(modnum=1, detector_region=detectorRegion))
   
#Go( processors )
#for i in range(len(runs)):

Go([
    Use(run=runs, region=selected_region, runType=run_type),
    ReadMBias_2015(processingDir="/afs/cern.ch/work/t/tilmbias/public/2016",doSingleRun=False, doRatio = True, modnum=64, detector_region=detectorRegion, detector_side=side, refCell=referenceCell, singleChannel=singleChannel),
    PlotRatioPMTsVsTime_2015perModule(modnum=64, detector_region='A13',refCell=referenceCell),
   ])








"""
#runs = '2015-07-01'
run_type = "MBias"
selected_region = "LBA"#    _highgain" #
#selected_region = None #here, if doRatio: only partition and channel important
singleChannel = True # if this is true and detector region is given: average over modules for given channel above, modnum=64
detectorRegion = "LBA_m04_c10" # if you want to use the same as selected_region, leave this variable to None, but better use this option, otherwise it only takes one PMT channel
side = None#"A" #you can also specify if you want only A or C-side analysed, if you leave it empty, it will average over both sides
referenceCell = "D6"
processors = []

# for i in range(1,65):
#     if i<10: 
#     	selected_region="EBA_m0"+str(i)+"_c02_highgain"
#     else:
# 	selected_region="EBA_m"+str(i)+"_c02_highgain"
	    	 	
#     processors.append(Use(run=runs, region=selected_region, runType=run_type))
#     # processors.append(ReadMBias(processingDir="/afs/cern.ch/user/t/tilecali/w0/ntuples/mbias/2016/first_data/",doSingleRun=False, doRatio = True, modnum=1, detector_region=detectorRegion, detector_side=side))
#     processors.append(ReadMBias(processingDir="/afs/cern.ch/work/t/tilmbias/public/2016/",doSingleRun=False, doRatio = True, modnum=1, detector_region=detectorRegion, detector_side=side))
#     processors.append(PlotRatioPMTsVsTime_2015(modnum=1, detector_region=detectorRegion))
    
# Go( processors )

Go([
    Use(run=runs, region=selected_region, runType=run_type),
    ReadMBias_2015(processingDir="/afs/cern.ch/work/t/tilmbias/public/2016/",doSingleRun=False, doRatio = True, modnum=1, detector_region=detectorRegion, detector_side=side, refCell=referenceCell, singleChannel=singleChannel),
    PlotRatioPMTsVsTime_2015(modnum=1, detector_region=detectorRegion,refCell=referenceCell),
   ])
"""
